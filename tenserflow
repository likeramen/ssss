import tensorflow as tf

import numpy as np



# 플레이스 홀더를 설정합니다.

X = tf.placeholder(tf.float32, shape=[None, 7])

Y = tf.placeholder(tf.float32, shape=[None, 1])



W = tf.Variable(tf.random_normal([7, 1]), name="weight")

b = tf.Variable(tf.random_normal([1]), name="bias")



# 가설을 설정합니다.

hypothesis = tf.matmul(X, W) + b



# 저장된 모델을 불러오는 객체를 선언합니다.

saver = tf.train.Saver()

model = tf.global_variables_initializer()



# 4가지 변수를 입력 받습니다.

avg_cloud = float(input('전운량: '))

tot_solar = float(input('일사시간: '))

avg_wnd_spd = float(input('풍속: '))

day_pre = float(input('강수량: '))

avg_tmprt = float(input('일평균온도: '))

# daily_tmprt = float(input('일교차: '))

avg_humid = float(input('습도: '))

pm10 = float(input('PM10: '))



with tf.Session() as sess:

    sess.run(model)



    # 저장된 학습 모델을 파일로부터 불러옵니다.

    save_path = "./saved.cpkt"

    saver.restore(sess, save_path)



    # 사용자의 입력 값을 이용해 배열을 만듭니다.

    data = ((avg_cloud, tot_solar, avg_wnd_spd, day_pre, avg_tmprt, avg_humid, pm10), )

    arr = np.array(data, dtype=np.float32)



    # 예측을 수행한 뒤에 그 결과를 출력합니다.

    x_data = arr[0:4]

    dict = sess.run(hypothesis, feed_dict={X: x_data})

    print(dict[0])
